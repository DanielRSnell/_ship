<div id="context-manager" class="context-manager no-scroll" x-data="contextManager()" :class="{ 'is-open': isOpen }">
    <div class="context-manager__icon no-scroll" @click="toggleOpen">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M3 3H21C21.5523 3 22 3.44772 22 4V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V4C2 3.44772 2.44772 3 3 3ZM12 15V17H18V15H12ZM8.41421 12L5.58579 14.8284L7 16.2426L11.2426 12L7 7.75736L5.58579 9.17157L8.41421 12Z"></path></svg> 
    </div>
    <div class="context-manager__content no-scroll">
        <div id="monaco-editor" class="no-scroll"></div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.33.0/min/vs/loader.min.js"></script>

<script>
function contextManager() {
    return {
        isOpen: false,
        editor: null,
        context: {{ context|json_encode|raw }},
        init() {
            this.$watch('isOpen', value => {
                if (value && !this.editor) {
                    this.$nextTick(() => {
                        this.initEditor();
                    });
                } else if (value && this.editor) {
                    this.$nextTick(() => {
                        this.editor.layout();
                    });
                }
            });
        },
        toggleOpen() {
            this.isOpen = !this.isOpen;
        },
        initEditor() {
            require.config({ paths: { 'vs': 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.33.0/min/vs' }});
            require(['vs/editor/editor.main'], () => {
                this.editor = monaco.editor.create(document.getElementById('monaco-editor'), {
                    value: JSON.stringify(this.context, null, 2),
                    language: 'json',
                    theme: 'vs-dark',
                    readOnly: true,
                    minimap: { enabled: false },
                    scrollBeyondLastLine: false,
                    automaticLayout: true
                });
            });
        }
    }
}
</script>

<style>
:root {
    --cm-bg-color: rgba(0, 0, 0, 0.8);
    --cm-text-color: #fff;
    --cm-border-color: #444;
    --cm-icon-size: 54px;
    --cm-open-size: 500px;
}

.no-scroll {
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    -ms-overflow-style: none;
}

.no-scroll::-webkit-scrollbar {
    display: none;
}

.context-manager {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: var(--cm-icon-size);
    height: var(--cm-icon-size);
    background-color: var(--cm-bg-color);
    color: var(--cm-text-color);
    border: 1px solid var(--cm-border-color);
    border-radius: 10px;
    font-family: Arial, sans-serif;
    font-size: 14px;
    z-index: 9999;
    transition: all 0.3s ease-in-out;
    overflow: hidden;
}

.context-manager.is-open {
    width: var(--cm-open-size);
    height: 80vh;
}

.context-manager__icon {
    width: var(--cm-icon-size);
    height: var(--cm-icon-size);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.context-manager__icon svg {
    width: 32px;
    height: 32px;
}

.context-manager__content {
    display: none;
    width: 100%;
    height: calc(100% - var(--cm-icon-size));
}

.context-manager.is-open .context-manager__content {
    display: block;
}

#monaco-editor {
    width: 100%;
    height: 100%;
    border-radius: 0 0 10px 10px;
}
</style>